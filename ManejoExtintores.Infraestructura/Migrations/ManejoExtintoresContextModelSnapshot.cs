// <auto-generated />
using System;
using ManejoExtintores.Infraestructura.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ManejoExtintores.Infraestructura.Migrations
{
    [DbContext(typeof(ManejoExtintoresContext))]
    partial class ManejoExtintoresContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DocCliente")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.CreditoServicio", b =>
                {
                    b.Property<int>("IdCreditos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Abono")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("Deuda")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdServicios")
                        .HasColumnType("int");

                    b.Property<int?>("ServiciosIdServicios")
                        .HasColumnType("int");

                    b.HasKey("IdCreditos");

                    b.HasIndex("ServiciosIdServicios");

                    b.ToTable("CreditoServicios");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.DetalleExtCliente", b =>
                {
                    b.Property<int>("IdDetalleCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("ClientesIdCliente")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaMantenimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaServicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdClientes")
                        .HasColumnType("int");

                    b.Property<int?>("IdServicio")
                        .HasColumnType("int");

                    b.Property<string>("Pesoextintor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiciosIdServicios")
                        .HasColumnType("int");

                    b.Property<string>("TipoExtintor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDetalleCliente");

                    b.HasIndex("ClientesIdCliente");

                    b.HasIndex("ServiciosIdServicios");

                    b.ToTable("DetalleExtClientes");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.DetalleServicio", b =>
                {
                    b.Property<int>("IdDetalleServ")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdServicios")
                        .HasColumnType("int");

                    b.Property<int?>("PesoXlibras")
                        .HasColumnType("int");

                    b.Property<int?>("ServiciosIdServicios")
                        .HasColumnType("int");

                    b.Property<string>("TipoExtintor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("IdDetalleServ");

                    b.HasIndex("ServiciosIdServicios");

                    b.ToTable("DetalleServicios");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.Empleado", b =>
                {
                    b.Property<int>("IdEmpleados")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmpresaIdEmpresa")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEmpleados");

                    b.HasIndex("EmpresaIdEmpresa");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.Empresa", b =>
                {
                    b.Property<int>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEmpresa");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.Gasto", b =>
                {
                    b.Property<int>("IdGastos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("IdGastos");

                    b.ToTable("Gastos");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.Inventario", b =>
                {
                    b.Property<int>("IdInventario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DetalleServId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdProductos")
                        .HasColumnType("int");

                    b.Property<int?>("PesoXlibras")
                        .HasColumnType("int");

                    b.Property<int?>("ProductosIdProductos")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdInventario");

                    b.HasIndex("DetalleServId");

                    b.HasIndex("ProductosIdProductos");

                    b.ToTable("Inventarios");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.PesoExtintor", b =>
                {
                    b.Property<int>("IdPesoExtintor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DetalleServIdDetalleServ")
                        .HasColumnType("int");

                    b.Property<int?>("IdDetalleServ")
                        .HasColumnType("int");

                    b.Property<int?>("PesoXlibras")
                        .HasColumnType("int");

                    b.HasKey("IdPesoExtintor");

                    b.HasIndex("DetalleServIdDetalleServ");

                    b.ToTable("PesoExtintors");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.Precio", b =>
                {
                    b.Property<int>("IdPrecios")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DetalleServIdDetalleServ")
                        .HasColumnType("int");

                    b.Property<int?>("IdDetalleServ")
                        .HasColumnType("int");

                    b.Property<int?>("IdProductos")
                        .HasColumnType("int");

                    b.Property<decimal?>("Iva")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int?>("ProductosIdProductos")
                        .HasColumnType("int");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("IdPrecios");

                    b.HasIndex("DetalleServIdDetalleServ");

                    b.HasIndex("ProductosIdProductos");

                    b.ToTable("Precios");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.Producto", b =>
                {
                    b.Property<int>("IdProductos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IdPesoExtintor")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoExtintor")
                        .HasColumnType("int");

                    b.Property<int?>("PesoExtintorIdPesoExtintor")
                        .HasColumnType("int");

                    b.Property<int?>("PesoXlibras")
                        .HasColumnType("int");

                    b.Property<int?>("TipoExtintorIdTipoExtintor")
                        .HasColumnType("int");

                    b.Property<string>("TipoProducto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProductos");

                    b.HasIndex("PesoExtintorIdPesoExtintor");

                    b.HasIndex("TipoExtintorIdTipoExtintor");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.Servicio", b =>
                {
                    b.Property<int>("IdServicios")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientesIdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("EmpleadosIdEmpleados")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaServicio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdClientes")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmpleados")
                        .HasColumnType("int");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("IdServicios");

                    b.HasIndex("ClientesIdCliente");

                    b.HasIndex("EmpleadosIdEmpleados");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.TipoExtintor", b =>
                {
                    b.Property<int>("IdTipoExtintor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DetalleServIdDetalleServ")
                        .HasColumnType("int");

                    b.Property<int?>("IdDetalleServ")
                        .HasColumnType("int");

                    b.Property<string>("Tipo_Extintor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoExtintor");

                    b.HasIndex("DetalleServIdDetalleServ");

                    b.ToTable("TipoExtintors");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.CreditoServicio", b =>
                {
                    b.HasOne("ManejoExtintores.Core.Modelos.Servicio", "Servicios")
                        .WithMany("CreditoServicios")
                        .HasForeignKey("ServiciosIdServicios");

                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.DetalleExtCliente", b =>
                {
                    b.HasOne("ManejoExtintores.Core.Modelos.Cliente", "Clientes")
                        .WithMany("DetalleExtClientes")
                        .HasForeignKey("ClientesIdCliente");

                    b.HasOne("ManejoExtintores.Core.Modelos.Servicio", "Servicios")
                        .WithMany("DetalleExtClientes")
                        .HasForeignKey("ServiciosIdServicios");

                    b.Navigation("Clientes");

                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.DetalleServicio", b =>
                {
                    b.HasOne("ManejoExtintores.Core.Modelos.Servicio", "Servicios")
                        .WithMany("DetalleServicios")
                        .HasForeignKey("ServiciosIdServicios");

                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.Empleado", b =>
                {
                    b.HasOne("ManejoExtintores.Core.Modelos.Empresa", "Empresa")
                        .WithMany("Empleados")
                        .HasForeignKey("EmpresaIdEmpresa");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.Inventario", b =>
                {
                    b.HasOne("ManejoExtintores.Core.Modelos.DetalleServicio", "DetalleServ")
                        .WithMany("Inventario")
                        .HasForeignKey("DetalleServId");

                    b.HasOne("ManejoExtintores.Core.Modelos.Producto", "Productos")
                        .WithMany("Inventarios")
                        .HasForeignKey("ProductosIdProductos");

                    b.Navigation("DetalleServ");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.PesoExtintor", b =>
                {
                    b.HasOne("ManejoExtintores.Core.Modelos.DetalleServicio", "DetalleServ")
                        .WithMany("PesoExtintors")
                        .HasForeignKey("DetalleServIdDetalleServ");

                    b.Navigation("DetalleServ");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.Precio", b =>
                {
                    b.HasOne("ManejoExtintores.Core.Modelos.DetalleServicio", "DetalleServ")
                        .WithMany("Precios")
                        .HasForeignKey("DetalleServIdDetalleServ");

                    b.HasOne("ManejoExtintores.Core.Modelos.Producto", "Productos")
                        .WithMany("Precios")
                        .HasForeignKey("ProductosIdProductos");

                    b.Navigation("DetalleServ");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.Producto", b =>
                {
                    b.HasOne("ManejoExtintores.Core.Modelos.PesoExtintor", "PesoExtintor")
                        .WithMany("Productos")
                        .HasForeignKey("PesoExtintorIdPesoExtintor");

                    b.HasOne("ManejoExtintores.Core.Modelos.TipoExtintor", "TipoExtintor")
                        .WithMany("Productos")
                        .HasForeignKey("TipoExtintorIdTipoExtintor");

                    b.Navigation("PesoExtintor");

                    b.Navigation("TipoExtintor");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.Servicio", b =>
                {
                    b.HasOne("ManejoExtintores.Core.Modelos.Cliente", "Clientes")
                        .WithMany("Servicios")
                        .HasForeignKey("ClientesIdCliente");

                    b.HasOne("ManejoExtintores.Core.Modelos.Empleado", "Empleados")
                        .WithMany("Servicios")
                        .HasForeignKey("EmpleadosIdEmpleados");

                    b.Navigation("Clientes");

                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.TipoExtintor", b =>
                {
                    b.HasOne("ManejoExtintores.Core.Modelos.DetalleServicio", "DetalleServ")
                        .WithMany("TipoExtintors")
                        .HasForeignKey("DetalleServIdDetalleServ");

                    b.Navigation("DetalleServ");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ManejoExtintores.Core.Modelos.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ManejoExtintores.Core.Modelos.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManejoExtintores.Core.Modelos.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ManejoExtintores.Core.Modelos.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.Cliente", b =>
                {
                    b.Navigation("DetalleExtClientes");

                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.DetalleServicio", b =>
                {
                    b.Navigation("Inventario");

                    b.Navigation("PesoExtintors");

                    b.Navigation("Precios");

                    b.Navigation("TipoExtintors");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.Empleado", b =>
                {
                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.Empresa", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.PesoExtintor", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.Producto", b =>
                {
                    b.Navigation("Inventarios");

                    b.Navigation("Precios");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.Servicio", b =>
                {
                    b.Navigation("CreditoServicios");

                    b.Navigation("DetalleExtClientes");

                    b.Navigation("DetalleServicios");
                });

            modelBuilder.Entity("ManejoExtintores.Core.Modelos.TipoExtintor", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
